<?xml version="1.0"?>
<launch>
    <arg name="behavior" default="true"/>
    <arg name="game_controller" default="true" description="Sets whether the Gamecontroller should be started"/>
    <arg name="localization" default="true"/>
    <arg name="sim" default="false"/>
    <arg name="simple" default="false" description="Whether to use the simple behavior" />
    <arg name="teamcom" default="false"/>
    <arg name="ipm" default="true"/>
    <arg name="vision" default="true"/>
    <arg name="ball_filter" default="true"/>
    <arg name="vision_debug" default="false" description="activates the debug output of the vision pipeline"/>


    <!-- launch game controller -->
    <group if="$(var game_controller)">
        <include file="$(find-pkg-share humanoid_league_game_controller)/launch/game_controller.launch">
        </include>
    </group>

    <!-- launch vision -->
    <group if="$(var vision)">
        <include file="$(find-pkg-share bitbots_bringup)/launch/vision_standalone.launch">
            <arg name="sim" value="$(var sim)" />
            <arg name="debug" value="$(var vision_debug)" />
        </include>
    </group>

    <!-- launch soccer inverse perspective mapping (ipm) -->
    <group if="$(var ipm)">
        <include file="$(find-pkg-share soccer_ipm)/launch/soccer_ipm.launch">
            <arg name="sim" value="$(var sim)"/>
        </include>
    </group>

    <!-- launch teamcom -->
    <group if="$(var teamcom)">
        <include file="$(find-pkg-share humanoid_league_team_communication)/launch/team_comm.launch">
        </include>
    </group>

    <!-- launch ball_filter -->
    <group if="$(var ball_filter)">
        <include file="$(find-pkg-share bitbots_ball_filter)/launch/ball_filter.launch"/>
    </group>

    <!-- launch localization or fake localization -->
    <group if="$(var localization)">
        <include file="$(find-pkg-share bitbots_localization)/launch/localization.launch">
            <arg name="sim" value="$(var sim)"/>
        </include>
    </group>
    <group unless="$(var localization)">
        <!-- simulate map frame -->
        <node name="map_odom" pkg="tf2_ros" exec="static_transform_publisher" args="--x 0 --y 0 --z 0 --roll 0 --pitch 0 --yaw 0 --frame-id map --child-frame-id odom" />
        <!-- publish perfect covariance -->
        <!--node name="localization_covariance" pkg="bitbots_localization" exec="rviz_localization_sim.py" output="screen" /-->
    </group>

    <!-- launch pathplanning -->
    <include file="$(find-pkg-share bitbots_nav2)/launch/pathfinding_nav2.launch" />

    <!-- launch behavior -->
    <group if="$(var behavior)">
        <include file="$(find-pkg-share bitbots_body_behavior)/launch/behavior.launch">
            <arg name="simple" value="$(var simple)"/>
        </include>
    </group>
</launch>

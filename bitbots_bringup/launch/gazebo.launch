<?xml version="1.0"?>
<launch>
    <!-- set parameter -->
    <arg name="hcm" default="false"/>
    <arg name="sim_ns" default="/" description="namespace for gazebo plugins" />
    <arg name="use_fake_walk" default="False"/>

    <param name="/simulation_active" value="true"/>
    <param name="/use_sim_time" value="true" />

    <!-- remaps necessary for other parts of our software -->
    <remap from="camera/image_raw" to="camera/image_proc"/>
    <remap from="camera/camera_info" to="camera_info"/>
    <remap from="imu" to="imu/data"/>

    <include file="$(find-pkg-share bitbots_bringup)/launch/load_robot_description.launch">
        <arg name="sim" value="true"/>
        <arg name="sim_ns" default="$(var sim_ns)" />
        <arg name="use_fake_walk" default="$(var use_fake_walk)"/>
    </include>

    <!-- launch gazebo with soccer field -->
    <group if="$(var use_fake_walk)">
        <include file="$(find-pkg-share gazebo_ros)/launch/empty_world.launch">
            <!-- use simpler physics when faking walk -->
            <arg name="world_name" value="$(find-pkg-share humanoid_league_gazebo_world)/worlds/robocup_soccer_simple_physics.world"/>
            <arg name="paused" value="false"/>
        </include>
        <rosparam file="$(find-pkg-share wolfgang_description)/config/wolfgang_control_simple_physics.yaml" command="load" ns="$(var sim_ns)"/>
        <node name="keep_stable" pkg="bitbots_bringup" exec="keep_stable_in_sim.py" output="screen" />
    </group>
    <group unless="$(var use_fake_walk)">
        <include file="$(find-pkg-share gazebo_ros)/launch/empty_world.launch">
            <arg name="world_name" value="$(find-pkg-share humanoid_league_gazebo_world)/worlds/robocup_soccer.world"/>
            <arg name="paused" value="false"/>
        </include>
        <rosparam file="$(find-pkg-share wolfgang_description)/config/wolfgang_control.yaml" command="load" ns="$(var sim_ns)"/>
    </group>

    <!-- spawn URDF and load the controllers -->
    <node name="spawn_urdf" pkg="gazebo_ros" ns="$(var sim_ns)" exec="spawn_model" args="-param /robot_description -urdf -model $(var sim_ns) -x -1.5 -y 3.3 -z 0.43 -Y -1.5 -P 0.26" output="screen" />
    <node name="controller_spawner" pkg="controller_manager" exec="spawner" respawn="false" output="screen" ns="$(var sim_ns)" args="joint_state_controller JointGroupController" />

    <!-- map motion goals for simulator -->
    <node name="motor_viz_helper" pkg="bitbots_bringup" exec="motor_goals_viz_helper.py" output="screen" args="--gazebo" />
</launch>

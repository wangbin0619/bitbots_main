<?xml version="1.0"?>
<launch>
    <let name="tf_prefix" value="$(eval '\'$(env ROS_NAMESPACE /)\'')"/>
    <arg name="sim" default="false"/>
    <arg name="sim_ns" default="/" description="namespace for gazebo plugins" />
    <arg name="fake_walk" default="False" description="fake walk controller for simulation" />

    <!-- global parameters -->
    <node name="parameter_blackboard" pkg="demo_nodes_cpp" exec="parameter_blackboard">
        <param name="simulation_active" value="$(var sim)"/>
        <param name="/use_sim_time" value="$(var sim)"/>

        <param name="robot_type_name" value="Wolfgang"/>
        <param name="robot_description" value="$(eval '\'$(find-pkg-share xacro)/xacro $(find-pkg-share wolfgang_description)/urdf/robot.urdf use_fake_walk:=$(var fake_walk) sim_ns:=$(var sim_ns)\'')" />
        <param name="urdf" value="$(find-pkg-share wolfgang_description)/urdf/robot.urdf" />

        <param from="$(find-pkg-share wolfgang_moveit_config)/config/wolfgang.srdf" />
        <param from="$(find-pkg-share wolfgang_moveit_config)/config/kinematics.yaml"/>
    </node>

    <!-- Load updated joint limits (override information from URDF) -->
    <group ns="robot_description_planning">
        <param from="$(find-pkg-share wolfgang_moveit_config)/config/joint_limits.yaml"/>
    </group>

    <!-- publish tfs, change topic depending if the simulation is used -->
    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" respawn="false" output="screen">
        <param name="tf_prefix" value="$(env ROS_NAMESPACE /)"/>
        <param name="prefix_tf_with" value="$(env ROS_NAMESPACE /)/"/>
    </node>

    <group>
        <include file="$(find-pkg-share humanoid_base_footprint)/launch/base_footprint.launch"/>
        <include file="$(find-pkg-share bitbots_convenience_frames)/launch/convenience_frames.launch"/>
    </group>

    <group unless="$(arg fake_walk)">
        <include file="$(find-pkg-share bitbots_odometry)/launch/odometry.launch"/>
    </group>

</launch>

#! /usr/bin/env python3

PACKAGE = 'humanoid_league_speaker'
import roslib

roslib.load_manifest(PACKAGE)

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()
#       Name       Type      Level Description     Default Min   Max
gen.add("print", bool_t, 0,
        "If the node shall write all messages also on the console", True)
gen.add("talk", bool_t, 0,
        "If the node shall talk", True)
level_enum = gen.enum([gen.const("Low", int_t, 0, "Lowest priority for information or debug."),
                       gen.const("Mid", int_t, 1, "Middle priority for more important information."),
                       gen.const("High", int_t, 2, "High priority for dangerous situations.")],
                      "An enum to set the message output level")
gen.add("msg_level", int_t, 0,
        "The minimal priority level, that should be spoken by the speaker", 0, 0, 2, edit_method=level_enum)
gen.add("amplitude", int_t, 0,
        "The amplitude with should be used for espeak.", 10, 0, 20)

exit(gen.generate(PACKAGE, "humanoid_league_speaker", "speaker_params"))

<?xml version="1.0"?>
<launch>
    <arg name="sim" default="false"/>
    <arg name="viz" default="false"/>
    <arg name="depends_only" default="false" />
    <arg name="tf_prefix" default=""/>

    <group unless="$(var sim)">
        <group unless="$(var viz)">
            <include file="$(find-pkg-share bitbots_ros_control)/launch/ros_control.launch" />
        </group>
    </group>
  
    <include file="$(find-pkg-share bitbots_utils)/launch/base.launch" >
        <arg name="sim" value="$(var sim)"/>
    </include>  

    <group if="$(var viz)">
        <!-- translate joint goals to joint states -->
        <node pkg="bitbots_utils" exec="motor_goals_viz_helper.py" args="--head"/>
        <!-- fake IMU needed for odometry-->
        <node pkg="bitbots_utils" exec="dummy_imu.py"/>
        <!-- add some visualization tools -->
        <include file="$(find-pkg-share humanoid_league_interactive_marker)/launch/interactive_marker.launch" />
        <!-- create fake tf from map to robot -->
        <node name="map_odom" pkg="bitbots_utils" exec="tf_map_odom.py" output="screen" />
    </group>

    <group unless="$(var viz)">
        <include file="$(find-pkg-share bitbots_bringup)/launch/vision_standalone.launch">
            <arg name="sim" value="$(var sim)" />
        </include>
        <include file="$(find-pkg-share humanoid_league_transform)/launch/transformer.launch" />
    </group>

    
    <group unless="$(var depends_only)">
        <node pkg="bitbots_head_behavior" exec="head_node" output="screen">
            <remap from="/head_motor_goals" to="/DynamixelController/command"/>
            <param from="$(find-pkg-share bitbots_body_behavior)/config/body_behavior.yaml"/>
            <param from="$(find-pkg-share bitbots_head_behavior)/config/head_config.yaml"/>
            <param name="camera_frame" value="$(var tf_prefix)camera"/>
            <param name="base_link_frame" value="$(var tf_prefix)base_link"/>
            <param name="odom_frame" value="$(var tf_prefix)odom"/>
            <param name="map_frame" value="$(var tf_prefix)map"/>
            <param name="ball_frame" value="$(var tf_prefix)ball"/>
            <param name="ball_approach_frame" value="$(var tf_prefix)ball_approach_frame"/>
            <param name="base_footprint_frame" value="$(var tf_prefix)base_footprint"/>
        </node>
    </group>
</launch>

#!/usr/bin/env python
PACKAGE = "bitbots_vision_cascade"

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

group_ball_fcnn = gen.add_group("ball_fcnn")
group_field_color_detector = gen.add_group("field_color_detector")
group_white_color_detector = gen.add_group("white_color_detector")
group_horizon_finder = gen.add_group("horizon_finder")
group_vision = gen.add_group("vision")
group_line_detector = gen.add_group("line_detector")
group_ROS = gen.add_group("ROS")
group_ball_finder = gen.add_group("ball_finder")
group_classifier_model = gen.add_group("classifier_model")
group_cascade_classifier = gen.add_group("cascade_classifier")

group_ball_fcnn.add("ball_fcnn_model_path", str_t, 0, "ball_fcnn_model_path", None)
group_ball_fcnn.add("ball_fcnn_debug", bool_t, 0, "ball_fcnn_debug", None)
group_ball_fcnn.add("ball_fcnn_threshold", double_t, 0, "ball_fcnn_threshold", min=0.0, max=1.0)
group_ball_fcnn.add("ball_fcnn_expand_stepsize", int_t, 0, "ball_fcnn_expand_stepsize", min=1, max=20)
group_ball_fcnn.add("ball_fcnn_pointcloud_stepsize", int_t, 0, "ball_fcnn_pointcloud_stepsize", min=1, max=20)
group_ball_fcnn.add("ball_fcnn_shuffle_candidate_list", bool_t, 0, "ball_fcnn_shuffle_candidate_list")
group_ball_fcnn.add("ball_fcnn_min_ball_diameter", int_t, 0, "ball_fcnn_min_ball_diameter", min=1, max=50)
group_ball_fcnn.add("ball_fcnn_max_ball_diameter", int_t, 0, "ball_fcnn_max_ball_diameter", min=1, max=600)


group_field_color_detector.add("field_color_detector_path", str_t, 0, "field_color_detector_path", None)
group_field_color_detector.add("field_color_detector_use_dummy_green", bool_t, 0, "field_color_detector_use_dummy_green", None)
group_field_color_detector.add("field_color_detector_dummy_lower_values_h", int_t, 0, "field_color_detector_dummy_lower_values_h", min=0, max=180)
group_field_color_detector.add("field_color_detector_dummy_lower_values_s", int_t, 0, "field_color_detector_dummy_lower_values_s", min=0, max=255)
group_field_color_detector.add("field_color_detector_dummy_lower_values_v", int_t, 0, "field_color_detector_dummy_lower_values_v", min=0, max=255)
group_field_color_detector.add("field_color_detector_dummy_upper_values_h", int_t, 0, "field_color_detector_dummy_upper_values_h", min=0, max=180)
group_field_color_detector.add("field_color_detector_dummy_upper_values_s", int_t, 0, "field_color_detector_dummy_upper_values_s", min=0, max=255)
group_field_color_detector.add("field_color_detector_dummy_upper_values_v", int_t, 0, "field_color_detector_dummy_upper_values_v", min=0, max=255)

group_white_color_detector.add("white_color_detector_lower_values_h", int_t, 0, "white_color_detector_lower_values_h", min=0, max=180)
group_white_color_detector.add("white_color_detector_lower_values_s", int_t, 0, "white_color_detector_lower_values_s", min=0, max=255)
group_white_color_detector.add("white_color_detector_lower_values_v", int_t, 0, "white_color_detector_lower_values_v", min=0, max=255)
group_white_color_detector.add("white_color_detector_upper_values_h", int_t, 0, "white_color_detector_upper_values_h", min=0, max=180)
group_white_color_detector.add("white_color_detector_upper_values_s", int_t, 0, "white_color_detector_upper_values_s", min=0, max=255)
group_white_color_detector.add("white_color_detector_upper_values_v", int_t, 0, "white_color_detector_upper_values_v", min=0, max=255)

group_horizon_finder.add("horizon_finder_vertical_steps", int_t, 0, "horizon_finder_vertical_steps", min=1, max=100)
group_horizon_finder.add("horizon_finder_horizontal_steps", int_t, 0, "horizon_finder_horizontal_steps", min=1, max=100)
group_horizon_finder.add("horizon_finder_precision_pix", int_t, 0, "horizon_finder_precision_pix", min=1, max=20)
group_horizon_finder.add("horizon_finder_min_precision_pix", int_t, 0, "horizon_finder_min_precision_pix", min=1, max=20)

group_vision.add("vision_debug", bool_t, 0, "vision_debug", None)
group_vision.add("vision_no_balls", bool_t, 0, "vision_no_balls", None)
group_vision.add("vision_ball_candidate_horizon_y_offset", int_t, 0, "vision_ball_candidate_horizon_y_offset", min=0, max=20)
group_vision.add("vision_ball_candidate_rating_threshold", double_t, 0, "vision_ball_candidate_rating_threshold", min=0.0, max=1.0)

group_line_detector.add("line_detector_horizon_offset", int_t, 0, "line_detector_horizon_offset", min=0, max=200)
group_line_detector.add("line_detector_linepoints_range", int_t, 0, "line_detector_linepoints_range", min=200, max=20000)
group_line_detector.add("line_detector_blur_kernel_size", int_t, 0, "line_detector_blur_kernel_size", min=1, max=30)
group_line_detector.add("line_len", int_t, 0, "line_len", min=0, max=255)
group_line_detector.add("green", int_t, 0, "green", min=0, max=10)
group_line_detector.add("red", int_t, 0, "red", min=0, max=10)
group_line_detector.add("blue", int_t, 0, "blue", min=0, max=10)
group_line_detector.add("subtract", int_t, 0, "subtract", min=0, max=255)
group_line_detector.add("magic_value", int_t, 0, "magic_value", min=0, max=255)
group_line_detector.add("horizon_offset", int_t, 0, "horizon_offset", min=0, max=255)

group_ROS.add("ROS_img_msg_topic", str_t, 0, "ROS_img_msg_topic", None)
group_ROS.add("ROS_img_queue_size", int_t, 0, "ROS_img_queue_size", min=1, max=20)
group_ROS.add("ROS_ball_msg_topic", str_t, 0, "ROS_ball_msg_topic", None)
group_ROS.add("ROS_line_msg_topic", str_t, 0, "ROS_line_msg_topic", None)

group_ball_finder.add("ball_finder_classify_threshold", double_t, 0, "ball_finder_classify_threshold", min=0.0, max=1.0)
group_ball_finder.add("ball_finder_scale_factor", double_t, 0, "ball_finder_scale_factor", min=1.0, max=5.0)
group_ball_finder.add("ball_finder_min_neighbors", int_t, 0, "ball_finder_min_neighbors", min=0, max=10)
group_ball_finder.add("ball_finder_min_size", int_t, 0, "ball_finder_min_size", min=5, max=100)

group_classifier_model.add("classifier_model_path", str_t, 0, "classifier_model_path", None)
group_cascade_classifier.add("cascade_classifier_path", str_t, 0, "cascade_classifier_path", None)


exit(gen.generate(PACKAGE, "bitbots_vision_cascade", "Vision"))
